=begin
#Crelate API Reference

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for CrelateClient::JobPostingsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'JobPostingsApi' do
  before do
    # run before each test
    @instance = CrelateClient::JobPostingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of JobPostingsApi' do
    it 'should create an instance of JobPostingsApi' do
      expect(@instance).to be_instance_of(CrelateClient::JobPostingsApi)
    end
  end

  # unit tests for public_api_delete_job_postings
  # delete a job posting
  # 
  # @param job_id identifier
  # @param api_key crelate api key
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'public_api_delete_job_postings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_api_get_job_posting
  # retrieve a job posting
  # 
  # @param job_id identifier
  # @param api_key crelate api key
  # @param [Hash] opts the optional parameters
  # @return [PublicApiGetJobPostingResponse]
  describe 'public_api_get_job_posting test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_api_get_job_postings
  # retrieve a list of all job postings
  # 
  # @param api_key crelate api key
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip skip number of records, default 0
  # @option opts [Integer] :take retrieve x amount of records, limit 500, default 50
  # @return [PublicApiGetJobPostingListResponse]
  describe 'public_api_get_job_postings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_api_get_recent_job_postings
  # retrieve a list of job postings updated within a certain time frame
  # 
  # @param api_key crelate api key
  # @param modified modified within x number of minutes ago
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip skip number of records, default 0
  # @option opts [Integer] :take retrieve x amount of records, limit 500, default 50
  # @return [PublicApiGetJobPostingListResponse]
  describe 'public_api_get_recent_job_postings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_api_post_job_posting_application
  # create a job application
  # The ResumeContent field should contain a Base64 encoded string representing  the contents of the resume, the ResumeFilename should be the original resume  filename including the extension.
  # @param job_id identifier
  # @param api_key crelate api key
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [PublicApiIdResponse]
  describe 'public_api_post_job_posting_application test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_api_put_job_posting
  # search  job postings
  # 
  # @param api_key crelate api key
  # @param query search terms
  # @param [Hash] opts the optional parameters
  # @return [PublicApiGetJobPostingSearchResponse]
  describe 'public_api_put_job_posting test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for public_api_put_job_posting_0
  # update a job posting
  # Replaces all fields. To partially update a job, first retrieve  it using the GET method, apply changes and submit to the PUT method.
  # @param job_id identifier
  # @param api_key crelate api key
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'public_api_put_job_posting_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
