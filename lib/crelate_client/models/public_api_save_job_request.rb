=begin
#Crelate API Reference

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'date'

module CrelateClient

  class PublicApiSaveJobRequest
    attr_accessor :actual_value

    attr_accessor :additional_contact_client_first_name

    attr_accessor :additional_contact_client_id

    attr_accessor :additional_contact_client_is_primary

    attr_accessor :additional_contact_client_last_name

    attr_accessor :address_business_city

    attr_accessor :address_business_country

    attr_accessor :address_business_is_primary

    attr_accessor :address_business_line1

    attr_accessor :address_business_state

    attr_accessor :address_business_zip_code

    attr_accessor :address_other_city

    attr_accessor :address_other_country

    attr_accessor :address_other_is_primary

    attr_accessor :address_other_line1

    attr_accessor :address_other_state

    attr_accessor :address_other_zip_code

    attr_accessor :bill_rate

    attr_accessor :bonus

    attr_accessor :commission

    attr_accessor :company_id

    attr_accessor :company_name

    attr_accessor :compensation

    attr_accessor :compensation_details

    attr_accessor :custom_field1

    attr_accessor :custom_field10

    attr_accessor :custom_field11

    attr_accessor :custom_field12

    attr_accessor :custom_field13

    attr_accessor :custom_field14

    attr_accessor :custom_field15

    attr_accessor :custom_field16

    attr_accessor :custom_field17

    attr_accessor :custom_field18

    attr_accessor :custom_field19

    attr_accessor :custom_field2

    attr_accessor :custom_field20

    attr_accessor :custom_field21

    attr_accessor :custom_field22

    attr_accessor :custom_field23

    attr_accessor :custom_field24

    attr_accessor :custom_field25

    attr_accessor :custom_field26

    attr_accessor :custom_field27

    attr_accessor :custom_field28

    attr_accessor :custom_field29

    attr_accessor :custom_field3

    attr_accessor :custom_field30

    attr_accessor :custom_field4

    attr_accessor :custom_field5

    attr_accessor :custom_field6

    attr_accessor :custom_field7

    attr_accessor :custom_field8

    attr_accessor :custom_field9

    attr_accessor :description

    attr_accessor :discount

    attr_accessor :estimated_close_date

    attr_accessor :external_primary_key

    attr_accessor :fee

    attr_accessor :fee_percent

    attr_accessor :hourly_rate

    attr_accessor :is_lead

    attr_accessor :is_on_hold

    attr_accessor :job_title_id

    attr_accessor :job_title_name

    attr_accessor :job_types

    attr_accessor :lead_source_id

    attr_accessor :lead_source_name

    attr_accessor :margin

    attr_accessor :name

    attr_accessor :number_of_openings

    attr_accessor :opportunity_type_id

    attr_accessor :opportunity_type_name

    attr_accessor :parent_job_id

    attr_accessor :parent_job_name

    attr_accessor :pay_rate

    attr_accessor :potential_value

    attr_accessor :priority_id

    attr_accessor :priority_name

    attr_accessor :probability

    attr_accessor :salary

    attr_accessor :start_date

    attr_accessor :tags

    attr_accessor :total_hours

    attr_accessor :website_description

    attr_accessor :website_description_is_primary

    attr_accessor :website_other

    attr_accessor :website_other_is_primary


    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'actual_value' => :'ActualValue',
        :'additional_contact_client_first_name' => :'AdditionalContact_Client_FirstName',
        :'additional_contact_client_id' => :'AdditionalContact_Client_Id',
        :'additional_contact_client_is_primary' => :'AdditionalContact_Client_IsPrimary',
        :'additional_contact_client_last_name' => :'AdditionalContact_Client_LastName',
        :'address_business_city' => :'Address_Business_City',
        :'address_business_country' => :'Address_Business_Country',
        :'address_business_is_primary' => :'Address_Business_IsPrimary',
        :'address_business_line1' => :'Address_Business_Line1',
        :'address_business_state' => :'Address_Business_State',
        :'address_business_zip_code' => :'Address_Business_ZipCode',
        :'address_other_city' => :'Address_Other_City',
        :'address_other_country' => :'Address_Other_Country',
        :'address_other_is_primary' => :'Address_Other_IsPrimary',
        :'address_other_line1' => :'Address_Other_Line1',
        :'address_other_state' => :'Address_Other_State',
        :'address_other_zip_code' => :'Address_Other_ZipCode',
        :'bill_rate' => :'BillRate',
        :'bonus' => :'Bonus',
        :'commission' => :'Commission',
        :'company_id' => :'Company_Id',
        :'company_name' => :'Company_Name',
        :'compensation' => :'Compensation',
        :'compensation_details' => :'CompensationDetails',
        :'custom_field1' => :'CustomField1',
        :'custom_field10' => :'CustomField10',
        :'custom_field11' => :'CustomField11',
        :'custom_field12' => :'CustomField12',
        :'custom_field13' => :'CustomField13',
        :'custom_field14' => :'CustomField14',
        :'custom_field15' => :'CustomField15',
        :'custom_field16' => :'CustomField16',
        :'custom_field17' => :'CustomField17',
        :'custom_field18' => :'CustomField18',
        :'custom_field19' => :'CustomField19',
        :'custom_field2' => :'CustomField2',
        :'custom_field20' => :'CustomField20',
        :'custom_field21' => :'CustomField21',
        :'custom_field22' => :'CustomField22',
        :'custom_field23' => :'CustomField23',
        :'custom_field24' => :'CustomField24',
        :'custom_field25' => :'CustomField25',
        :'custom_field26' => :'CustomField26',
        :'custom_field27' => :'CustomField27',
        :'custom_field28' => :'CustomField28',
        :'custom_field29' => :'CustomField29',
        :'custom_field3' => :'CustomField3',
        :'custom_field30' => :'CustomField30',
        :'custom_field4' => :'CustomField4',
        :'custom_field5' => :'CustomField5',
        :'custom_field6' => :'CustomField6',
        :'custom_field7' => :'CustomField7',
        :'custom_field8' => :'CustomField8',
        :'custom_field9' => :'CustomField9',
        :'description' => :'Description',
        :'discount' => :'Discount',
        :'estimated_close_date' => :'EstimatedCloseDate',
        :'external_primary_key' => :'ExternalPrimaryKey',
        :'fee' => :'Fee',
        :'fee_percent' => :'FeePercent',
        :'hourly_rate' => :'HourlyRate',
        :'is_lead' => :'IsLead',
        :'is_on_hold' => :'IsOnHold',
        :'job_title_id' => :'JobTitle_Id',
        :'job_title_name' => :'JobTitle_Name',
        :'job_types' => :'JobTypes',
        :'lead_source_id' => :'LeadSource_Id',
        :'lead_source_name' => :'LeadSource_Name',
        :'margin' => :'Margin',
        :'name' => :'Name',
        :'number_of_openings' => :'NumberOfOpenings',
        :'opportunity_type_id' => :'OpportunityType_Id',
        :'opportunity_type_name' => :'OpportunityType_Name',
        :'parent_job_id' => :'ParentJob_Id',
        :'parent_job_name' => :'ParentJob_Name',
        :'pay_rate' => :'PayRate',
        :'potential_value' => :'PotentialValue',
        :'priority_id' => :'Priority_Id',
        :'priority_name' => :'Priority_Name',
        :'probability' => :'Probability',
        :'salary' => :'Salary',
        :'start_date' => :'StartDate',
        :'tags' => :'Tags',
        :'total_hours' => :'TotalHours',
        :'website_description' => :'Website_Description',
        :'website_description_is_primary' => :'Website_Description_IsPrimary',
        :'website_other' => :'Website_Other',
        :'website_other_is_primary' => :'Website_Other_IsPrimary'
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        :'actual_value' => :'Float',
        :'additional_contact_client_first_name' => :'String',
        :'additional_contact_client_id' => :'String',
        :'additional_contact_client_is_primary' => :'BOOLEAN',
        :'additional_contact_client_last_name' => :'String',
        :'address_business_city' => :'String',
        :'address_business_country' => :'String',
        :'address_business_is_primary' => :'BOOLEAN',
        :'address_business_line1' => :'String',
        :'address_business_state' => :'String',
        :'address_business_zip_code' => :'String',
        :'address_other_city' => :'String',
        :'address_other_country' => :'String',
        :'address_other_is_primary' => :'BOOLEAN',
        :'address_other_line1' => :'String',
        :'address_other_state' => :'String',
        :'address_other_zip_code' => :'String',
        :'bill_rate' => :'Float',
        :'bonus' => :'Float',
        :'commission' => :'Float',
        :'company_id' => :'String',
        :'company_name' => :'String',
        :'compensation' => :'Float',
        :'compensation_details' => :'String',
        :'custom_field1' => :'String',
        :'custom_field10' => :'String',
        :'custom_field11' => :'Float',
        :'custom_field12' => :'Float',
        :'custom_field13' => :'Float',
        :'custom_field14' => :'Float',
        :'custom_field15' => :'Float',
        :'custom_field16' => :'Float',
        :'custom_field17' => :'Float',
        :'custom_field18' => :'Float',
        :'custom_field19' => :'Float',
        :'custom_field2' => :'String',
        :'custom_field20' => :'Float',
        :'custom_field21' => :'DateTime',
        :'custom_field22' => :'DateTime',
        :'custom_field23' => :'DateTime',
        :'custom_field24' => :'DateTime',
        :'custom_field25' => :'DateTime',
        :'custom_field26' => :'DateTime',
        :'custom_field27' => :'DateTime',
        :'custom_field28' => :'DateTime',
        :'custom_field29' => :'DateTime',
        :'custom_field3' => :'String',
        :'custom_field30' => :'DateTime',
        :'custom_field4' => :'String',
        :'custom_field5' => :'String',
        :'custom_field6' => :'String',
        :'custom_field7' => :'String',
        :'custom_field8' => :'String',
        :'custom_field9' => :'String',
        :'description' => :'String',
        :'discount' => :'Float',
        :'estimated_close_date' => :'DateTime',
        :'external_primary_key' => :'String',
        :'fee' => :'Float',
        :'fee_percent' => :'Float',
        :'hourly_rate' => :'Float',
        :'is_lead' => :'BOOLEAN',
        :'is_on_hold' => :'BOOLEAN',
        :'job_title_id' => :'String',
        :'job_title_name' => :'String',
        :'job_types' => :'Array<PublicApiSaveJobRequestJobType>',
        :'lead_source_id' => :'String',
        :'lead_source_name' => :'String',
        :'margin' => :'Float',
        :'name' => :'String',
        :'number_of_openings' => :'Integer',
        :'opportunity_type_id' => :'String',
        :'opportunity_type_name' => :'String',
        :'parent_job_id' => :'String',
        :'parent_job_name' => :'String',
        :'pay_rate' => :'Float',
        :'potential_value' => :'Float',
        :'priority_id' => :'String',
        :'priority_name' => :'String',
        :'probability' => :'Float',
        :'salary' => :'Float',
        :'start_date' => :'DateTime',
        :'tags' => :'Hash<String, Array<String>>',
        :'total_hours' => :'Float',
        :'website_description' => :'String',
        :'website_description_is_primary' => :'BOOLEAN',
        :'website_other' => :'String',
        :'website_other_is_primary' => :'BOOLEAN'
      }
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}){|(k,v), h| h[k.to_sym] = v}

      if attributes.has_key?(:'ActualValue')
        self.actual_value = attributes[:'ActualValue']
      end

      if attributes.has_key?(:'AdditionalContact_Client_FirstName')
        self.additional_contact_client_first_name = attributes[:'AdditionalContact_Client_FirstName']
      end

      if attributes.has_key?(:'AdditionalContact_Client_Id')
        self.additional_contact_client_id = attributes[:'AdditionalContact_Client_Id']
      end

      if attributes.has_key?(:'AdditionalContact_Client_IsPrimary')
        self.additional_contact_client_is_primary = attributes[:'AdditionalContact_Client_IsPrimary']
      end

      if attributes.has_key?(:'AdditionalContact_Client_LastName')
        self.additional_contact_client_last_name = attributes[:'AdditionalContact_Client_LastName']
      end

      if attributes.has_key?(:'Address_Business_City')
        self.address_business_city = attributes[:'Address_Business_City']
      end

      if attributes.has_key?(:'Address_Business_Country')
        self.address_business_country = attributes[:'Address_Business_Country']
      end

      if attributes.has_key?(:'Address_Business_IsPrimary')
        self.address_business_is_primary = attributes[:'Address_Business_IsPrimary']
      end

      if attributes.has_key?(:'Address_Business_Line1')
        self.address_business_line1 = attributes[:'Address_Business_Line1']
      end

      if attributes.has_key?(:'Address_Business_State')
        self.address_business_state = attributes[:'Address_Business_State']
      end

      if attributes.has_key?(:'Address_Business_ZipCode')
        self.address_business_zip_code = attributes[:'Address_Business_ZipCode']
      end

      if attributes.has_key?(:'Address_Other_City')
        self.address_other_city = attributes[:'Address_Other_City']
      end

      if attributes.has_key?(:'Address_Other_Country')
        self.address_other_country = attributes[:'Address_Other_Country']
      end

      if attributes.has_key?(:'Address_Other_IsPrimary')
        self.address_other_is_primary = attributes[:'Address_Other_IsPrimary']
      end

      if attributes.has_key?(:'Address_Other_Line1')
        self.address_other_line1 = attributes[:'Address_Other_Line1']
      end

      if attributes.has_key?(:'Address_Other_State')
        self.address_other_state = attributes[:'Address_Other_State']
      end

      if attributes.has_key?(:'Address_Other_ZipCode')
        self.address_other_zip_code = attributes[:'Address_Other_ZipCode']
      end

      if attributes.has_key?(:'BillRate')
        self.bill_rate = attributes[:'BillRate']
      end

      if attributes.has_key?(:'Bonus')
        self.bonus = attributes[:'Bonus']
      end

      if attributes.has_key?(:'Commission')
        self.commission = attributes[:'Commission']
      end

      if attributes.has_key?(:'Company_Id')
        self.company_id = attributes[:'Company_Id']
      end

      if attributes.has_key?(:'Company_Name')
        self.company_name = attributes[:'Company_Name']
      end

      if attributes.has_key?(:'Compensation')
        self.compensation = attributes[:'Compensation']
      end

      if attributes.has_key?(:'CompensationDetails')
        self.compensation_details = attributes[:'CompensationDetails']
      end

      if attributes.has_key?(:'CustomField1')
        self.custom_field1 = attributes[:'CustomField1']
      end

      if attributes.has_key?(:'CustomField10')
        self.custom_field10 = attributes[:'CustomField10']
      end

      if attributes.has_key?(:'CustomField11')
        self.custom_field11 = attributes[:'CustomField11']
      end

      if attributes.has_key?(:'CustomField12')
        self.custom_field12 = attributes[:'CustomField12']
      end

      if attributes.has_key?(:'CustomField13')
        self.custom_field13 = attributes[:'CustomField13']
      end

      if attributes.has_key?(:'CustomField14')
        self.custom_field14 = attributes[:'CustomField14']
      end

      if attributes.has_key?(:'CustomField15')
        self.custom_field15 = attributes[:'CustomField15']
      end

      if attributes.has_key?(:'CustomField16')
        self.custom_field16 = attributes[:'CustomField16']
      end

      if attributes.has_key?(:'CustomField17')
        self.custom_field17 = attributes[:'CustomField17']
      end

      if attributes.has_key?(:'CustomField18')
        self.custom_field18 = attributes[:'CustomField18']
      end

      if attributes.has_key?(:'CustomField19')
        self.custom_field19 = attributes[:'CustomField19']
      end

      if attributes.has_key?(:'CustomField2')
        self.custom_field2 = attributes[:'CustomField2']
      end

      if attributes.has_key?(:'CustomField20')
        self.custom_field20 = attributes[:'CustomField20']
      end

      if attributes.has_key?(:'CustomField21')
        self.custom_field21 = attributes[:'CustomField21']
      end

      if attributes.has_key?(:'CustomField22')
        self.custom_field22 = attributes[:'CustomField22']
      end

      if attributes.has_key?(:'CustomField23')
        self.custom_field23 = attributes[:'CustomField23']
      end

      if attributes.has_key?(:'CustomField24')
        self.custom_field24 = attributes[:'CustomField24']
      end

      if attributes.has_key?(:'CustomField25')
        self.custom_field25 = attributes[:'CustomField25']
      end

      if attributes.has_key?(:'CustomField26')
        self.custom_field26 = attributes[:'CustomField26']
      end

      if attributes.has_key?(:'CustomField27')
        self.custom_field27 = attributes[:'CustomField27']
      end

      if attributes.has_key?(:'CustomField28')
        self.custom_field28 = attributes[:'CustomField28']
      end

      if attributes.has_key?(:'CustomField29')
        self.custom_field29 = attributes[:'CustomField29']
      end

      if attributes.has_key?(:'CustomField3')
        self.custom_field3 = attributes[:'CustomField3']
      end

      if attributes.has_key?(:'CustomField30')
        self.custom_field30 = attributes[:'CustomField30']
      end

      if attributes.has_key?(:'CustomField4')
        self.custom_field4 = attributes[:'CustomField4']
      end

      if attributes.has_key?(:'CustomField5')
        self.custom_field5 = attributes[:'CustomField5']
      end

      if attributes.has_key?(:'CustomField6')
        self.custom_field6 = attributes[:'CustomField6']
      end

      if attributes.has_key?(:'CustomField7')
        self.custom_field7 = attributes[:'CustomField7']
      end

      if attributes.has_key?(:'CustomField8')
        self.custom_field8 = attributes[:'CustomField8']
      end

      if attributes.has_key?(:'CustomField9')
        self.custom_field9 = attributes[:'CustomField9']
      end

      if attributes.has_key?(:'Description')
        self.description = attributes[:'Description']
      end

      if attributes.has_key?(:'Discount')
        self.discount = attributes[:'Discount']
      end

      if attributes.has_key?(:'EstimatedCloseDate')
        self.estimated_close_date = attributes[:'EstimatedCloseDate']
      end

      if attributes.has_key?(:'ExternalPrimaryKey')
        self.external_primary_key = attributes[:'ExternalPrimaryKey']
      end

      if attributes.has_key?(:'Fee')
        self.fee = attributes[:'Fee']
      end

      if attributes.has_key?(:'FeePercent')
        self.fee_percent = attributes[:'FeePercent']
      end

      if attributes.has_key?(:'HourlyRate')
        self.hourly_rate = attributes[:'HourlyRate']
      end

      if attributes.has_key?(:'IsLead')
        self.is_lead = attributes[:'IsLead']
      end

      if attributes.has_key?(:'IsOnHold')
        self.is_on_hold = attributes[:'IsOnHold']
      end

      if attributes.has_key?(:'JobTitle_Id')
        self.job_title_id = attributes[:'JobTitle_Id']
      end

      if attributes.has_key?(:'JobTitle_Name')
        self.job_title_name = attributes[:'JobTitle_Name']
      end

      if attributes.has_key?(:'JobTypes')
        if (value = attributes[:'JobTypes']).is_a?(Array)
          self.job_types = value
        end
      end

      if attributes.has_key?(:'LeadSource_Id')
        self.lead_source_id = attributes[:'LeadSource_Id']
      end

      if attributes.has_key?(:'LeadSource_Name')
        self.lead_source_name = attributes[:'LeadSource_Name']
      end

      if attributes.has_key?(:'Margin')
        self.margin = attributes[:'Margin']
      end

      if attributes.has_key?(:'Name')
        self.name = attributes[:'Name']
      end

      if attributes.has_key?(:'NumberOfOpenings')
        self.number_of_openings = attributes[:'NumberOfOpenings']
      end

      if attributes.has_key?(:'OpportunityType_Id')
        self.opportunity_type_id = attributes[:'OpportunityType_Id']
      end

      if attributes.has_key?(:'OpportunityType_Name')
        self.opportunity_type_name = attributes[:'OpportunityType_Name']
      end

      if attributes.has_key?(:'ParentJob_Id')
        self.parent_job_id = attributes[:'ParentJob_Id']
      end

      if attributes.has_key?(:'ParentJob_Name')
        self.parent_job_name = attributes[:'ParentJob_Name']
      end

      if attributes.has_key?(:'PayRate')
        self.pay_rate = attributes[:'PayRate']
      end

      if attributes.has_key?(:'PotentialValue')
        self.potential_value = attributes[:'PotentialValue']
      end

      if attributes.has_key?(:'Priority_Id')
        self.priority_id = attributes[:'Priority_Id']
      end

      if attributes.has_key?(:'Priority_Name')
        self.priority_name = attributes[:'Priority_Name']
      end

      if attributes.has_key?(:'Probability')
        self.probability = attributes[:'Probability']
      end

      if attributes.has_key?(:'Salary')
        self.salary = attributes[:'Salary']
      end

      if attributes.has_key?(:'StartDate')
        self.start_date = attributes[:'StartDate']
      end

      if attributes.has_key?(:'Tags')
        if (value = attributes[:'Tags']).is_a?(Hash)
          self.tags = value
        end
      end

      if attributes.has_key?(:'TotalHours')
        self.total_hours = attributes[:'TotalHours']
      end

      if attributes.has_key?(:'Website_Description')
        self.website_description = attributes[:'Website_Description']
      end

      if attributes.has_key?(:'Website_Description_IsPrimary')
        self.website_description_is_primary = attributes[:'Website_Description_IsPrimary']
      end

      if attributes.has_key?(:'Website_Other')
        self.website_other = attributes[:'Website_Other']
      end

      if attributes.has_key?(:'Website_Other_IsPrimary')
        self.website_other_is_primary = attributes[:'Website_Other_IsPrimary']
      end

    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      return invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          actual_value == o.actual_value &&
          additional_contact_client_first_name == o.additional_contact_client_first_name &&
          additional_contact_client_id == o.additional_contact_client_id &&
          additional_contact_client_is_primary == o.additional_contact_client_is_primary &&
          additional_contact_client_last_name == o.additional_contact_client_last_name &&
          address_business_city == o.address_business_city &&
          address_business_country == o.address_business_country &&
          address_business_is_primary == o.address_business_is_primary &&
          address_business_line1 == o.address_business_line1 &&
          address_business_state == o.address_business_state &&
          address_business_zip_code == o.address_business_zip_code &&
          address_other_city == o.address_other_city &&
          address_other_country == o.address_other_country &&
          address_other_is_primary == o.address_other_is_primary &&
          address_other_line1 == o.address_other_line1 &&
          address_other_state == o.address_other_state &&
          address_other_zip_code == o.address_other_zip_code &&
          bill_rate == o.bill_rate &&
          bonus == o.bonus &&
          commission == o.commission &&
          company_id == o.company_id &&
          company_name == o.company_name &&
          compensation == o.compensation &&
          compensation_details == o.compensation_details &&
          custom_field1 == o.custom_field1 &&
          custom_field10 == o.custom_field10 &&
          custom_field11 == o.custom_field11 &&
          custom_field12 == o.custom_field12 &&
          custom_field13 == o.custom_field13 &&
          custom_field14 == o.custom_field14 &&
          custom_field15 == o.custom_field15 &&
          custom_field16 == o.custom_field16 &&
          custom_field17 == o.custom_field17 &&
          custom_field18 == o.custom_field18 &&
          custom_field19 == o.custom_field19 &&
          custom_field2 == o.custom_field2 &&
          custom_field20 == o.custom_field20 &&
          custom_field21 == o.custom_field21 &&
          custom_field22 == o.custom_field22 &&
          custom_field23 == o.custom_field23 &&
          custom_field24 == o.custom_field24 &&
          custom_field25 == o.custom_field25 &&
          custom_field26 == o.custom_field26 &&
          custom_field27 == o.custom_field27 &&
          custom_field28 == o.custom_field28 &&
          custom_field29 == o.custom_field29 &&
          custom_field3 == o.custom_field3 &&
          custom_field30 == o.custom_field30 &&
          custom_field4 == o.custom_field4 &&
          custom_field5 == o.custom_field5 &&
          custom_field6 == o.custom_field6 &&
          custom_field7 == o.custom_field7 &&
          custom_field8 == o.custom_field8 &&
          custom_field9 == o.custom_field9 &&
          description == o.description &&
          discount == o.discount &&
          estimated_close_date == o.estimated_close_date &&
          external_primary_key == o.external_primary_key &&
          fee == o.fee &&
          fee_percent == o.fee_percent &&
          hourly_rate == o.hourly_rate &&
          is_lead == o.is_lead &&
          is_on_hold == o.is_on_hold &&
          job_title_id == o.job_title_id &&
          job_title_name == o.job_title_name &&
          job_types == o.job_types &&
          lead_source_id == o.lead_source_id &&
          lead_source_name == o.lead_source_name &&
          margin == o.margin &&
          name == o.name &&
          number_of_openings == o.number_of_openings &&
          opportunity_type_id == o.opportunity_type_id &&
          opportunity_type_name == o.opportunity_type_name &&
          parent_job_id == o.parent_job_id &&
          parent_job_name == o.parent_job_name &&
          pay_rate == o.pay_rate &&
          potential_value == o.potential_value &&
          priority_id == o.priority_id &&
          priority_name == o.priority_name &&
          probability == o.probability &&
          salary == o.salary &&
          start_date == o.start_date &&
          tags == o.tags &&
          total_hours == o.total_hours &&
          website_description == o.website_description &&
          website_description_is_primary == o.website_description_is_primary &&
          website_other == o.website_other &&
          website_other_is_primary == o.website_other_is_primary
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [actual_value, additional_contact_client_first_name, additional_contact_client_id, additional_contact_client_is_primary, additional_contact_client_last_name, address_business_city, address_business_country, address_business_is_primary, address_business_line1, address_business_state, address_business_zip_code, address_other_city, address_other_country, address_other_is_primary, address_other_line1, address_other_state, address_other_zip_code, bill_rate, bonus, commission, company_id, company_name, compensation, compensation_details, custom_field1, custom_field10, custom_field11, custom_field12, custom_field13, custom_field14, custom_field15, custom_field16, custom_field17, custom_field18, custom_field19, custom_field2, custom_field20, custom_field21, custom_field22, custom_field23, custom_field24, custom_field25, custom_field26, custom_field27, custom_field28, custom_field29, custom_field3, custom_field30, custom_field4, custom_field5, custom_field6, custom_field7, custom_field8, custom_field9, description, discount, estimated_close_date, external_primary_key, fee, fee_percent, hourly_rate, is_lead, is_on_hold, job_title_id, job_title_name, job_types, lead_source_id, lead_source_name, margin, name, number_of_openings, opportunity_type_id, opportunity_type_name, parent_job_id, parent_job_name, pay_rate, potential_value, priority_id, priority_name, probability, salary, start_date, tags, total_hours, website_description, website_description_is_primary, website_other, website_other_is_primary].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.swagger_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map{ |v| _deserialize($1, v) } )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :BOOLEAN
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        temp_model = CrelateClient.const_get(type).new
        temp_model.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        next if value.nil?
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map{ |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
