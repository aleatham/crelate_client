=begin
#Crelate API Reference

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'date'

module CrelateClient

  class PublicApiSaveAccountRequest
    attr_accessor :additional_contact_billing_first_name

    attr_accessor :additional_contact_billing_id

    attr_accessor :additional_contact_billing_is_primary

    attr_accessor :additional_contact_billing_last_name

    attr_accessor :additional_contact_other_first_name

    attr_accessor :additional_contact_other_id

    attr_accessor :additional_contact_other_is_primary

    attr_accessor :additional_contact_other_last_name

    attr_accessor :address_business_city

    attr_accessor :address_business_country

    attr_accessor :address_business_is_primary

    attr_accessor :address_business_line1

    attr_accessor :address_business_state

    attr_accessor :address_business_zip_code

    attr_accessor :address_headquarters_city

    attr_accessor :address_headquarters_country

    attr_accessor :address_headquarters_is_primary

    attr_accessor :address_headquarters_line1

    attr_accessor :address_headquarters_state

    attr_accessor :address_headquarters_zip_code

    attr_accessor :address_other_city

    attr_accessor :address_other_country

    attr_accessor :address_other_is_primary

    attr_accessor :address_other_line1

    attr_accessor :address_other_state

    attr_accessor :address_other_zip_code

    attr_accessor :description

    attr_accessor :email_address_other

    attr_accessor :email_address_other_is_primary

    attr_accessor :email_address_sales

    attr_accessor :email_address_sales_is_primary

    attr_accessor :email_address_support

    attr_accessor :email_address_support_is_primary

    attr_accessor :external_primary_key

    attr_accessor :name

    attr_accessor :parent_account_id

    attr_accessor :parent_account_name

    attr_accessor :phone_number_fax

    attr_accessor :phone_number_fax_extension

    attr_accessor :phone_number_fax_is_primary

    attr_accessor :phone_number_main

    attr_accessor :phone_number_main_extension

    attr_accessor :phone_number_main_is_primary

    attr_accessor :phone_number_other

    attr_accessor :phone_number_other_extension

    attr_accessor :phone_number_other_is_primary

    attr_accessor :phone_number_sales

    attr_accessor :phone_number_sales_extension

    attr_accessor :phone_number_sales_is_primary

    attr_accessor :phone_number_skype

    attr_accessor :phone_number_skype_extension

    attr_accessor :phone_number_skype_is_primary

    attr_accessor :phone_number_support

    attr_accessor :phone_number_support_extension

    attr_accessor :phone_number_support_is_primary

    attr_accessor :record_type

    attr_accessor :tags

    attr_accessor :website_blog

    attr_accessor :website_blog_is_primary

    attr_accessor :website_business

    attr_accessor :website_business_is_primary

    attr_accessor :website_facebook

    attr_accessor :website_facebook_is_primary

    attr_accessor :website_linked_in

    attr_accessor :website_linked_in_is_primary

    attr_accessor :website_other

    attr_accessor :website_other_is_primary


    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'additional_contact_billing_first_name' => :'AdditionalContact_Billing_FirstName',
        :'additional_contact_billing_id' => :'AdditionalContact_Billing_Id',
        :'additional_contact_billing_is_primary' => :'AdditionalContact_Billing_IsPrimary',
        :'additional_contact_billing_last_name' => :'AdditionalContact_Billing_LastName',
        :'additional_contact_other_first_name' => :'AdditionalContact_Other_FirstName',
        :'additional_contact_other_id' => :'AdditionalContact_Other_Id',
        :'additional_contact_other_is_primary' => :'AdditionalContact_Other_IsPrimary',
        :'additional_contact_other_last_name' => :'AdditionalContact_Other_LastName',
        :'address_business_city' => :'Address_Business_City',
        :'address_business_country' => :'Address_Business_Country',
        :'address_business_is_primary' => :'Address_Business_IsPrimary',
        :'address_business_line1' => :'Address_Business_Line1',
        :'address_business_state' => :'Address_Business_State',
        :'address_business_zip_code' => :'Address_Business_ZipCode',
        :'address_headquarters_city' => :'Address_Headquarters_City',
        :'address_headquarters_country' => :'Address_Headquarters_Country',
        :'address_headquarters_is_primary' => :'Address_Headquarters_IsPrimary',
        :'address_headquarters_line1' => :'Address_Headquarters_Line1',
        :'address_headquarters_state' => :'Address_Headquarters_State',
        :'address_headquarters_zip_code' => :'Address_Headquarters_ZipCode',
        :'address_other_city' => :'Address_Other_City',
        :'address_other_country' => :'Address_Other_Country',
        :'address_other_is_primary' => :'Address_Other_IsPrimary',
        :'address_other_line1' => :'Address_Other_Line1',
        :'address_other_state' => :'Address_Other_State',
        :'address_other_zip_code' => :'Address_Other_ZipCode',
        :'description' => :'Description',
        :'email_address_other' => :'EmailAddress_Other',
        :'email_address_other_is_primary' => :'EmailAddress_Other_IsPrimary',
        :'email_address_sales' => :'EmailAddress_Sales',
        :'email_address_sales_is_primary' => :'EmailAddress_Sales_IsPrimary',
        :'email_address_support' => :'EmailAddress_Support',
        :'email_address_support_is_primary' => :'EmailAddress_Support_IsPrimary',
        :'external_primary_key' => :'ExternalPrimaryKey',
        :'name' => :'Name',
        :'parent_account_id' => :'ParentAccount_Id',
        :'parent_account_name' => :'ParentAccount_Name',
        :'phone_number_fax' => :'PhoneNumber_Fax',
        :'phone_number_fax_extension' => :'PhoneNumber_Fax_Extension',
        :'phone_number_fax_is_primary' => :'PhoneNumber_Fax_IsPrimary',
        :'phone_number_main' => :'PhoneNumber_Main',
        :'phone_number_main_extension' => :'PhoneNumber_Main_Extension',
        :'phone_number_main_is_primary' => :'PhoneNumber_Main_IsPrimary',
        :'phone_number_other' => :'PhoneNumber_Other',
        :'phone_number_other_extension' => :'PhoneNumber_Other_Extension',
        :'phone_number_other_is_primary' => :'PhoneNumber_Other_IsPrimary',
        :'phone_number_sales' => :'PhoneNumber_Sales',
        :'phone_number_sales_extension' => :'PhoneNumber_Sales_Extension',
        :'phone_number_sales_is_primary' => :'PhoneNumber_Sales_IsPrimary',
        :'phone_number_skype' => :'PhoneNumber_Skype',
        :'phone_number_skype_extension' => :'PhoneNumber_Skype_Extension',
        :'phone_number_skype_is_primary' => :'PhoneNumber_Skype_IsPrimary',
        :'phone_number_support' => :'PhoneNumber_Support',
        :'phone_number_support_extension' => :'PhoneNumber_Support_Extension',
        :'phone_number_support_is_primary' => :'PhoneNumber_Support_IsPrimary',
        :'record_type' => :'RecordType',
        :'tags' => :'Tags',
        :'website_blog' => :'Website_Blog',
        :'website_blog_is_primary' => :'Website_Blog_IsPrimary',
        :'website_business' => :'Website_Business',
        :'website_business_is_primary' => :'Website_Business_IsPrimary',
        :'website_facebook' => :'Website_Facebook',
        :'website_facebook_is_primary' => :'Website_Facebook_IsPrimary',
        :'website_linked_in' => :'Website_LinkedIn',
        :'website_linked_in_is_primary' => :'Website_LinkedIn_IsPrimary',
        :'website_other' => :'Website_Other',
        :'website_other_is_primary' => :'Website_Other_IsPrimary'
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        :'additional_contact_billing_first_name' => :'String',
        :'additional_contact_billing_id' => :'String',
        :'additional_contact_billing_is_primary' => :'BOOLEAN',
        :'additional_contact_billing_last_name' => :'String',
        :'additional_contact_other_first_name' => :'String',
        :'additional_contact_other_id' => :'String',
        :'additional_contact_other_is_primary' => :'BOOLEAN',
        :'additional_contact_other_last_name' => :'String',
        :'address_business_city' => :'String',
        :'address_business_country' => :'String',
        :'address_business_is_primary' => :'BOOLEAN',
        :'address_business_line1' => :'String',
        :'address_business_state' => :'String',
        :'address_business_zip_code' => :'String',
        :'address_headquarters_city' => :'String',
        :'address_headquarters_country' => :'String',
        :'address_headquarters_is_primary' => :'BOOLEAN',
        :'address_headquarters_line1' => :'String',
        :'address_headquarters_state' => :'String',
        :'address_headquarters_zip_code' => :'String',
        :'address_other_city' => :'String',
        :'address_other_country' => :'String',
        :'address_other_is_primary' => :'BOOLEAN',
        :'address_other_line1' => :'String',
        :'address_other_state' => :'String',
        :'address_other_zip_code' => :'String',
        :'description' => :'String',
        :'email_address_other' => :'String',
        :'email_address_other_is_primary' => :'BOOLEAN',
        :'email_address_sales' => :'String',
        :'email_address_sales_is_primary' => :'BOOLEAN',
        :'email_address_support' => :'String',
        :'email_address_support_is_primary' => :'BOOLEAN',
        :'external_primary_key' => :'String',
        :'name' => :'String',
        :'parent_account_id' => :'String',
        :'parent_account_name' => :'String',
        :'phone_number_fax' => :'String',
        :'phone_number_fax_extension' => :'String',
        :'phone_number_fax_is_primary' => :'BOOLEAN',
        :'phone_number_main' => :'String',
        :'phone_number_main_extension' => :'String',
        :'phone_number_main_is_primary' => :'BOOLEAN',
        :'phone_number_other' => :'String',
        :'phone_number_other_extension' => :'String',
        :'phone_number_other_is_primary' => :'BOOLEAN',
        :'phone_number_sales' => :'String',
        :'phone_number_sales_extension' => :'String',
        :'phone_number_sales_is_primary' => :'BOOLEAN',
        :'phone_number_skype' => :'String',
        :'phone_number_skype_extension' => :'String',
        :'phone_number_skype_is_primary' => :'BOOLEAN',
        :'phone_number_support' => :'String',
        :'phone_number_support_extension' => :'String',
        :'phone_number_support_is_primary' => :'BOOLEAN',
        :'record_type' => :'Array<String>',
        :'tags' => :'Hash<String, Array<String>>',
        :'website_blog' => :'String',
        :'website_blog_is_primary' => :'BOOLEAN',
        :'website_business' => :'String',
        :'website_business_is_primary' => :'BOOLEAN',
        :'website_facebook' => :'String',
        :'website_facebook_is_primary' => :'BOOLEAN',
        :'website_linked_in' => :'String',
        :'website_linked_in_is_primary' => :'BOOLEAN',
        :'website_other' => :'String',
        :'website_other_is_primary' => :'BOOLEAN'
      }
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}){|(k,v), h| h[k.to_sym] = v}

      if attributes.has_key?(:'AdditionalContact_Billing_FirstName')
        self.additional_contact_billing_first_name = attributes[:'AdditionalContact_Billing_FirstName']
      end

      if attributes.has_key?(:'AdditionalContact_Billing_Id')
        self.additional_contact_billing_id = attributes[:'AdditionalContact_Billing_Id']
      end

      if attributes.has_key?(:'AdditionalContact_Billing_IsPrimary')
        self.additional_contact_billing_is_primary = attributes[:'AdditionalContact_Billing_IsPrimary']
      end

      if attributes.has_key?(:'AdditionalContact_Billing_LastName')
        self.additional_contact_billing_last_name = attributes[:'AdditionalContact_Billing_LastName']
      end

      if attributes.has_key?(:'AdditionalContact_Other_FirstName')
        self.additional_contact_other_first_name = attributes[:'AdditionalContact_Other_FirstName']
      end

      if attributes.has_key?(:'AdditionalContact_Other_Id')
        self.additional_contact_other_id = attributes[:'AdditionalContact_Other_Id']
      end

      if attributes.has_key?(:'AdditionalContact_Other_IsPrimary')
        self.additional_contact_other_is_primary = attributes[:'AdditionalContact_Other_IsPrimary']
      end

      if attributes.has_key?(:'AdditionalContact_Other_LastName')
        self.additional_contact_other_last_name = attributes[:'AdditionalContact_Other_LastName']
      end

      if attributes.has_key?(:'Address_Business_City')
        self.address_business_city = attributes[:'Address_Business_City']
      end

      if attributes.has_key?(:'Address_Business_Country')
        self.address_business_country = attributes[:'Address_Business_Country']
      end

      if attributes.has_key?(:'Address_Business_IsPrimary')
        self.address_business_is_primary = attributes[:'Address_Business_IsPrimary']
      end

      if attributes.has_key?(:'Address_Business_Line1')
        self.address_business_line1 = attributes[:'Address_Business_Line1']
      end

      if attributes.has_key?(:'Address_Business_State')
        self.address_business_state = attributes[:'Address_Business_State']
      end

      if attributes.has_key?(:'Address_Business_ZipCode')
        self.address_business_zip_code = attributes[:'Address_Business_ZipCode']
      end

      if attributes.has_key?(:'Address_Headquarters_City')
        self.address_headquarters_city = attributes[:'Address_Headquarters_City']
      end

      if attributes.has_key?(:'Address_Headquarters_Country')
        self.address_headquarters_country = attributes[:'Address_Headquarters_Country']
      end

      if attributes.has_key?(:'Address_Headquarters_IsPrimary')
        self.address_headquarters_is_primary = attributes[:'Address_Headquarters_IsPrimary']
      end

      if attributes.has_key?(:'Address_Headquarters_Line1')
        self.address_headquarters_line1 = attributes[:'Address_Headquarters_Line1']
      end

      if attributes.has_key?(:'Address_Headquarters_State')
        self.address_headquarters_state = attributes[:'Address_Headquarters_State']
      end

      if attributes.has_key?(:'Address_Headquarters_ZipCode')
        self.address_headquarters_zip_code = attributes[:'Address_Headquarters_ZipCode']
      end

      if attributes.has_key?(:'Address_Other_City')
        self.address_other_city = attributes[:'Address_Other_City']
      end

      if attributes.has_key?(:'Address_Other_Country')
        self.address_other_country = attributes[:'Address_Other_Country']
      end

      if attributes.has_key?(:'Address_Other_IsPrimary')
        self.address_other_is_primary = attributes[:'Address_Other_IsPrimary']
      end

      if attributes.has_key?(:'Address_Other_Line1')
        self.address_other_line1 = attributes[:'Address_Other_Line1']
      end

      if attributes.has_key?(:'Address_Other_State')
        self.address_other_state = attributes[:'Address_Other_State']
      end

      if attributes.has_key?(:'Address_Other_ZipCode')
        self.address_other_zip_code = attributes[:'Address_Other_ZipCode']
      end

      if attributes.has_key?(:'Description')
        self.description = attributes[:'Description']
      end

      if attributes.has_key?(:'EmailAddress_Other')
        self.email_address_other = attributes[:'EmailAddress_Other']
      end

      if attributes.has_key?(:'EmailAddress_Other_IsPrimary')
        self.email_address_other_is_primary = attributes[:'EmailAddress_Other_IsPrimary']
      end

      if attributes.has_key?(:'EmailAddress_Sales')
        self.email_address_sales = attributes[:'EmailAddress_Sales']
      end

      if attributes.has_key?(:'EmailAddress_Sales_IsPrimary')
        self.email_address_sales_is_primary = attributes[:'EmailAddress_Sales_IsPrimary']
      end

      if attributes.has_key?(:'EmailAddress_Support')
        self.email_address_support = attributes[:'EmailAddress_Support']
      end

      if attributes.has_key?(:'EmailAddress_Support_IsPrimary')
        self.email_address_support_is_primary = attributes[:'EmailAddress_Support_IsPrimary']
      end

      if attributes.has_key?(:'ExternalPrimaryKey')
        self.external_primary_key = attributes[:'ExternalPrimaryKey']
      end

      if attributes.has_key?(:'Name')
        self.name = attributes[:'Name']
      end

      if attributes.has_key?(:'ParentAccount_Id')
        self.parent_account_id = attributes[:'ParentAccount_Id']
      end

      if attributes.has_key?(:'ParentAccount_Name')
        self.parent_account_name = attributes[:'ParentAccount_Name']
      end

      if attributes.has_key?(:'PhoneNumber_Fax')
        self.phone_number_fax = attributes[:'PhoneNumber_Fax']
      end

      if attributes.has_key?(:'PhoneNumber_Fax_Extension')
        self.phone_number_fax_extension = attributes[:'PhoneNumber_Fax_Extension']
      end

      if attributes.has_key?(:'PhoneNumber_Fax_IsPrimary')
        self.phone_number_fax_is_primary = attributes[:'PhoneNumber_Fax_IsPrimary']
      end

      if attributes.has_key?(:'PhoneNumber_Main')
        self.phone_number_main = attributes[:'PhoneNumber_Main']
      end

      if attributes.has_key?(:'PhoneNumber_Main_Extension')
        self.phone_number_main_extension = attributes[:'PhoneNumber_Main_Extension']
      end

      if attributes.has_key?(:'PhoneNumber_Main_IsPrimary')
        self.phone_number_main_is_primary = attributes[:'PhoneNumber_Main_IsPrimary']
      end

      if attributes.has_key?(:'PhoneNumber_Other')
        self.phone_number_other = attributes[:'PhoneNumber_Other']
      end

      if attributes.has_key?(:'PhoneNumber_Other_Extension')
        self.phone_number_other_extension = attributes[:'PhoneNumber_Other_Extension']
      end

      if attributes.has_key?(:'PhoneNumber_Other_IsPrimary')
        self.phone_number_other_is_primary = attributes[:'PhoneNumber_Other_IsPrimary']
      end

      if attributes.has_key?(:'PhoneNumber_Sales')
        self.phone_number_sales = attributes[:'PhoneNumber_Sales']
      end

      if attributes.has_key?(:'PhoneNumber_Sales_Extension')
        self.phone_number_sales_extension = attributes[:'PhoneNumber_Sales_Extension']
      end

      if attributes.has_key?(:'PhoneNumber_Sales_IsPrimary')
        self.phone_number_sales_is_primary = attributes[:'PhoneNumber_Sales_IsPrimary']
      end

      if attributes.has_key?(:'PhoneNumber_Skype')
        self.phone_number_skype = attributes[:'PhoneNumber_Skype']
      end

      if attributes.has_key?(:'PhoneNumber_Skype_Extension')
        self.phone_number_skype_extension = attributes[:'PhoneNumber_Skype_Extension']
      end

      if attributes.has_key?(:'PhoneNumber_Skype_IsPrimary')
        self.phone_number_skype_is_primary = attributes[:'PhoneNumber_Skype_IsPrimary']
      end

      if attributes.has_key?(:'PhoneNumber_Support')
        self.phone_number_support = attributes[:'PhoneNumber_Support']
      end

      if attributes.has_key?(:'PhoneNumber_Support_Extension')
        self.phone_number_support_extension = attributes[:'PhoneNumber_Support_Extension']
      end

      if attributes.has_key?(:'PhoneNumber_Support_IsPrimary')
        self.phone_number_support_is_primary = attributes[:'PhoneNumber_Support_IsPrimary']
      end

      if attributes.has_key?(:'RecordType')
        if (value = attributes[:'RecordType']).is_a?(Array)
          self.record_type = value
        end
      end

      if attributes.has_key?(:'Tags')
        if (value = attributes[:'Tags']).is_a?(Hash)
          self.tags = value
        end
      end

      if attributes.has_key?(:'Website_Blog')
        self.website_blog = attributes[:'Website_Blog']
      end

      if attributes.has_key?(:'Website_Blog_IsPrimary')
        self.website_blog_is_primary = attributes[:'Website_Blog_IsPrimary']
      end

      if attributes.has_key?(:'Website_Business')
        self.website_business = attributes[:'Website_Business']
      end

      if attributes.has_key?(:'Website_Business_IsPrimary')
        self.website_business_is_primary = attributes[:'Website_Business_IsPrimary']
      end

      if attributes.has_key?(:'Website_Facebook')
        self.website_facebook = attributes[:'Website_Facebook']
      end

      if attributes.has_key?(:'Website_Facebook_IsPrimary')
        self.website_facebook_is_primary = attributes[:'Website_Facebook_IsPrimary']
      end

      if attributes.has_key?(:'Website_LinkedIn')
        self.website_linked_in = attributes[:'Website_LinkedIn']
      end

      if attributes.has_key?(:'Website_LinkedIn_IsPrimary')
        self.website_linked_in_is_primary = attributes[:'Website_LinkedIn_IsPrimary']
      end

      if attributes.has_key?(:'Website_Other')
        self.website_other = attributes[:'Website_Other']
      end

      if attributes.has_key?(:'Website_Other_IsPrimary')
        self.website_other_is_primary = attributes[:'Website_Other_IsPrimary']
      end

    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      return invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          additional_contact_billing_first_name == o.additional_contact_billing_first_name &&
          additional_contact_billing_id == o.additional_contact_billing_id &&
          additional_contact_billing_is_primary == o.additional_contact_billing_is_primary &&
          additional_contact_billing_last_name == o.additional_contact_billing_last_name &&
          additional_contact_other_first_name == o.additional_contact_other_first_name &&
          additional_contact_other_id == o.additional_contact_other_id &&
          additional_contact_other_is_primary == o.additional_contact_other_is_primary &&
          additional_contact_other_last_name == o.additional_contact_other_last_name &&
          address_business_city == o.address_business_city &&
          address_business_country == o.address_business_country &&
          address_business_is_primary == o.address_business_is_primary &&
          address_business_line1 == o.address_business_line1 &&
          address_business_state == o.address_business_state &&
          address_business_zip_code == o.address_business_zip_code &&
          address_headquarters_city == o.address_headquarters_city &&
          address_headquarters_country == o.address_headquarters_country &&
          address_headquarters_is_primary == o.address_headquarters_is_primary &&
          address_headquarters_line1 == o.address_headquarters_line1 &&
          address_headquarters_state == o.address_headquarters_state &&
          address_headquarters_zip_code == o.address_headquarters_zip_code &&
          address_other_city == o.address_other_city &&
          address_other_country == o.address_other_country &&
          address_other_is_primary == o.address_other_is_primary &&
          address_other_line1 == o.address_other_line1 &&
          address_other_state == o.address_other_state &&
          address_other_zip_code == o.address_other_zip_code &&
          description == o.description &&
          email_address_other == o.email_address_other &&
          email_address_other_is_primary == o.email_address_other_is_primary &&
          email_address_sales == o.email_address_sales &&
          email_address_sales_is_primary == o.email_address_sales_is_primary &&
          email_address_support == o.email_address_support &&
          email_address_support_is_primary == o.email_address_support_is_primary &&
          external_primary_key == o.external_primary_key &&
          name == o.name &&
          parent_account_id == o.parent_account_id &&
          parent_account_name == o.parent_account_name &&
          phone_number_fax == o.phone_number_fax &&
          phone_number_fax_extension == o.phone_number_fax_extension &&
          phone_number_fax_is_primary == o.phone_number_fax_is_primary &&
          phone_number_main == o.phone_number_main &&
          phone_number_main_extension == o.phone_number_main_extension &&
          phone_number_main_is_primary == o.phone_number_main_is_primary &&
          phone_number_other == o.phone_number_other &&
          phone_number_other_extension == o.phone_number_other_extension &&
          phone_number_other_is_primary == o.phone_number_other_is_primary &&
          phone_number_sales == o.phone_number_sales &&
          phone_number_sales_extension == o.phone_number_sales_extension &&
          phone_number_sales_is_primary == o.phone_number_sales_is_primary &&
          phone_number_skype == o.phone_number_skype &&
          phone_number_skype_extension == o.phone_number_skype_extension &&
          phone_number_skype_is_primary == o.phone_number_skype_is_primary &&
          phone_number_support == o.phone_number_support &&
          phone_number_support_extension == o.phone_number_support_extension &&
          phone_number_support_is_primary == o.phone_number_support_is_primary &&
          record_type == o.record_type &&
          tags == o.tags &&
          website_blog == o.website_blog &&
          website_blog_is_primary == o.website_blog_is_primary &&
          website_business == o.website_business &&
          website_business_is_primary == o.website_business_is_primary &&
          website_facebook == o.website_facebook &&
          website_facebook_is_primary == o.website_facebook_is_primary &&
          website_linked_in == o.website_linked_in &&
          website_linked_in_is_primary == o.website_linked_in_is_primary &&
          website_other == o.website_other &&
          website_other_is_primary == o.website_other_is_primary
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [additional_contact_billing_first_name, additional_contact_billing_id, additional_contact_billing_is_primary, additional_contact_billing_last_name, additional_contact_other_first_name, additional_contact_other_id, additional_contact_other_is_primary, additional_contact_other_last_name, address_business_city, address_business_country, address_business_is_primary, address_business_line1, address_business_state, address_business_zip_code, address_headquarters_city, address_headquarters_country, address_headquarters_is_primary, address_headquarters_line1, address_headquarters_state, address_headquarters_zip_code, address_other_city, address_other_country, address_other_is_primary, address_other_line1, address_other_state, address_other_zip_code, description, email_address_other, email_address_other_is_primary, email_address_sales, email_address_sales_is_primary, email_address_support, email_address_support_is_primary, external_primary_key, name, parent_account_id, parent_account_name, phone_number_fax, phone_number_fax_extension, phone_number_fax_is_primary, phone_number_main, phone_number_main_extension, phone_number_main_is_primary, phone_number_other, phone_number_other_extension, phone_number_other_is_primary, phone_number_sales, phone_number_sales_extension, phone_number_sales_is_primary, phone_number_skype, phone_number_skype_extension, phone_number_skype_is_primary, phone_number_support, phone_number_support_extension, phone_number_support_is_primary, record_type, tags, website_blog, website_blog_is_primary, website_business, website_business_is_primary, website_facebook, website_facebook_is_primary, website_linked_in, website_linked_in_is_primary, website_other, website_other_is_primary].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.swagger_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map{ |v| _deserialize($1, v) } )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :BOOLEAN
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        temp_model = CrelateClient.const_get(type).new
        temp_model.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        next if value.nil?
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map{ |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
